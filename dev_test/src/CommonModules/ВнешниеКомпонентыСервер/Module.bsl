
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// ИнтернетПоддержкаПользователей.ПолучениеВнешнихКомпонент

// Возвращает таблицу описаний внешних компонент, которые требуется обновлять автоматически с Портала 1С:ИТС.
//
// Параметры:
//  ВнешниеКомпоненты - Массив - (необязательный) коллекция ссылок Справочник.ВнешниеКомпоненты.
//
// Возвращаемое значение:
//  ТаблицаЗначений - См. ПолучениеВнешнихКомпонент.ОписаниеВнешнихКомпонент
//          подсистемы ПолучениеВнешнихКомпонент Библиотеки интернет-поддержки пользователей (БИП).
//
Функция АвтоматическиОбновляемыеКомпоненты(ВнешниеКомпоненты = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеКомпоненты.Идентификатор КАК Идентификатор,
		|	ВнешниеКомпоненты.Версия КАК Версия
		|ИЗ
		|	Справочник.ВнешниеКомпоненты КАК ВнешниеКомпоненты
		|ГДЕ
		|	ВнешниеКомпоненты.ОбновлятьСПортала1СИТС
		|	%1";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		?(ВнешниеКомпоненты = Неопределено, "", "И ВнешниеКомпоненты.Ссылка В (&ВнешниеКомпоненты)"));
	Запрос.УстановитьПараметр("ВнешниеКомпоненты", ВнешниеКомпоненты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МодульПолучениеВнешнихКомпонент = ОбщегоНазначения.ОбщийМодуль("ПолучениеВнешнихКомпонент");
	ОписаниеВнешнихКомпонент        = МодульПолучениеВнешнихКомпонент.ОписаниеВнешнихКомпонент();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОписаниеКомпоненты = ОписаниеВнешнихКомпонент.Добавить();
		ОписаниеКомпоненты.Идентификатор = ВыборкаДетальныеЗаписи.Идентификатор;
		ОписаниеКомпоненты.Версия        = ВыборкаДетальныеЗаписи.Версия;
	КонецЦикла;
	
	Возврат ОписаниеВнешнихКомпонент;
	
КонецФункции

// Выполняет обновление внешних компонент.
//
// Параметры:
//  ДанныеВнешнихКомпонент - ТаблицаЗначений - таблица обновляемых компонент.
//    ** Идентификатор - Строка - идентификатор.
//    ** Версия - Строка - версия.
//    ** ДатаВерсии - Строка - дата версии.
//    ** Наименование - Строка - наименование.
//    ** ИмяФайла - Строка - имя файла.
//    ** АдресФайла - Строка - адрес файла.
//    ** КодОшибки - Строка - код ошибки.
//
Процедура ОбновитьВнешниеКомпоненты(ДанныеВнешнихКомпонент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВнешниеКомпоненты.Ссылка КАК Ссылка,
		|	ВнешниеКомпоненты.Идентификатор КАК Идентификатор
		|ИЗ
		|	Справочник.ВнешниеКомпоненты КАК ВнешниеКомпоненты
		|ГДЕ
		|	ВнешниеКомпоненты.Идентификатор В(&Идентификаторы)";
	
	Запрос.УстановитьПараметр("Идентификаторы", ДанныеВнешнихКомпонент.ВыгрузитьКолонку("Идентификатор"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// Обход результата запроса.
	Для каждого СтрокаРезультата Из ДанныеВнешнихКомпонент Цикл
		
		КодОшибки = СтрокаРезультата.КодОшибки;
		
		Если ЗначениеЗаполнено(КодОшибки) Тогда
			
			Если КодОшибки = "АктуальнаяВерсия" Тогда
				Продолжить;
			КонецЕсли;
			
			ИнформацияОбОшибке = "";
			Если КодОшибки = "ОтсутствуетКомпонента" Тогда 
				ИнформацияОбОшибке = НСтр("ru = 'В сервисе внешних компонент не обнаружена внешняя компонента'");
			ИначеЕсли КодОшибки = "ФайлНеЗагружен" Тогда 
				ИнформацияОбОшибке = НСтр("ru = 'При попытке загрузить файл внешней компоненты из сервиса, возникла ошибка'");
			КонецЕсли;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При загрузке внешней компоненты %1 возникала ошибка:
				           |%2'"),
				ВнешниеКомпонентыСлужебный.ПредставлениеКомпоненты(СтрокаРезультата.Идентификатор, СтрокаРезультата.Версия),
				ИнформацияОбОшибке);
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление внешних компонент'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
			
			Продолжить;
		КонецЕсли;
		
		Информация = ВнешниеКомпонентыСлужебный.ИнформацияОКомпоненте(СтрокаРезультата.АдресФайла, Ложь);
		
		Если Не Информация.Разобрано Тогда 
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление внешних компонент'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,, Информация.ОписаниеОшибки);
			Продолжить;
		КонецЕсли;
		
		// Поиск ссылки.
		Отбор = Новый Структура("Идентификатор", СтрокаРезультата.Идентификатор);
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда 
			
			Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			// Когда уже загружена компонента по дате более свежая, чем на Портале 1С:ИТС, обновление не следует выполнять.
			Если Объект.ДатаВерсии > СтрокаРезультата.ДатаВерсии Тогда 
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Объект, Информация.Реквизиты); // По данным манифеста.
			ЗаполнитьЗначенияСвойств(Объект, СтрокаРезультата);     // По данным с сайта.
			
			Объект.ДополнительныеСвойства.Вставить("ДвоичныеДанныеКомпоненты", Информация.ДвоичныеДанные);
			
			Попытка
				Объект.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление внешних компонент'",
						ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Структура параметров для см. процедуру ОбновитьОбщуюКомпоненту.
//
// Возвращаемое значение:
//  Структура - коллекция параметров:
//      * Идентификатор - Строка - идентификатор.
//      * Версия - Строка - версия.
//      * ДатаВерсии - Дата - дата версии.
//      * Наименование - Строка - наименование.
//      * ИмяФайла - Строка - имя файла.
//      * ПутьКФайлу - Строка - путь к файлу.
//
Функция ОписаниеПоставляемойОбщейКомпоненты() Экспорт
	
	Описание = Новый Структура;
	Описание.Вставить("Идентификатор");
	Описание.Вставить("Версия");
	Описание.Вставить("ДатаВерсии");
	Описание.Вставить("Наименование");
	Описание.Вставить("ИмяФайла");
	Описание.Вставить("ПутьКФайлу");
	Возврат Описание;
	
КонецФункции

// Выполняет обновление общих внешних компонент.
//
// Параметры:
//  ОписаниеКомпоненты - Структура - См. функцию ОписаниеПоставляемойОбщейКомпоненты.
//
Процедура ОбновитьОбщуюКомпоненту(ОписаниеКомпоненты) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ВнешниеКомпонентыВМоделиСервиса") Тогда
		МодульВнешниеКомпонентыВМоделиСервисаСлужебный = ОбщегоНазначения.ОбщийМодуль("ВнешниеКомпонентыВМоделиСервисаСлужебный");
		МодульВнешниеКомпонентыВМоделиСервисаСлужебный.ОбновитьОбщуюКомпоненту(ОписаниеКомпоненты);
	КонецЕсли;
	
КонецПроцедуры

// Конец ИнтернетПоддержкаПользователей.ПолучениеВнешнихКомпонент

#КонецОбласти

#КонецОбласти