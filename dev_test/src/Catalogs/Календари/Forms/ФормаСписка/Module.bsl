
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	УстановитьПараметрыСписка();
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Календари);
	ЕстьГрупповоеИзменениеРеквизитов = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов");
	Элементы.СписокИзменитьВыделенные.Видимость = ЕстьГрупповоеИзменениеРеквизитов И МожноРедактировать;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов") Тогда
		МодульГрупповоеИзменениеОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ГрупповоеИзменениеОбъектовКлиент");
		МодульГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Календари", Строки.ПолучитьКлючи());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("КалендарьНеЗаполнен", НСтр("ru = 'Производственный календарь не заполнен'"));
	Запрос.УстановитьПараметр("КалендарьНеЗаполненНаГод", НСтр("ru = 'Производственный календарь не заполнен на очередной календарный год'"));
	Запрос.УстановитьПараметр("ГрафикНеЗаполнен", НСтр("ru = 'График не был заполнен на очередной календарный год'"));
	Запрос.УстановитьПараметр("ПериодГрафикаОграничен", НСтр("ru = 'Период заполнения графика ограничен (см. поле «Дата окончания»)'"));
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КалендарныеГрафики.Календарь КАК ГрафикРаботы,
		|	МАКСИМУМ(КалендарныеГрафики.ДатаГрафика) КАК ДатаЗаполненности
		|ПОМЕСТИТЬ ВТДатыЗаполненностиГрафиков
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ГДЕ
		|	КалендарныеГрафики.Календарь В(&Календари)
		|
		|СГРУППИРОВАТЬ ПО
		|	КалендарныеГрафики.Календарь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПроизводственныхКалендарей.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь,
		|	МАКСИМУМ(ДанныеПроизводственныхКалендарей.Дата) КАК ДатаЗаполненности
		|ПОМЕСТИТЬ ВТДатыЗаполненностиКалендарей
		|ИЗ
		|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственныхКалендарей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
		|		ПО (Календари.ПроизводственныйКалендарь = ДанныеПроизводственныхКалендарей.ПроизводственныйКалендарь)
		|			И (Календари.Ссылка В (&Календари))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПроизводственныхКалендарей.ПроизводственныйКалендарь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СправочникГрафикиРаботы.Ссылка КАК Ссылка,
		|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, СправочникГрафикиРаботы.ГоризонтПланирования) КАК ДатаНеобходимойЗаполненности,
		|	ДанныеГрафиков.ДатаЗаполненности КАК ДатаЗаполненности,
		|	ДанныеПроизводственныхКалендарей.ДатаЗаполненности КАК ДатаЗаполненностиПроизводственногоКалендаря,
		|	ВЫБОР
		|		КОГДА ДанныеГрафиков.ДатаЗаполненности < ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, СправочникГрафикиРаботы.ГоризонтПланирования)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТребуетЗаполнения,
		|	ВЫБОР
		|		КОГДА ДанныеГрафиков.ДатаЗаполненности < ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, СправочникГрафикиРаботы.ГоризонтПланирования)
		|			ТОГДА ВЫБОР
		|					КОГДА СправочникГрафикиРаботы.ПроизводственныйКалендарь <> ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|						ТОГДА ВЫБОР
		|								КОГДА ДанныеПроизводственныхКалендарей.ДатаЗаполненности = ДАТАВРЕМЯ(1, 1, 1)
		|									ТОГДА ВЫРАЗИТЬ(&КалендарьНеЗаполнен КАК СТРОКА(100))
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ДанныеПроизводственныхКалендарей.ДатаЗаполненности < ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, СправочникГрафикиРаботы.ГоризонтПланирования)
		|											ТОГДА ВЫРАЗИТЬ(&КалендарьНеЗаполненНаГод КАК СТРОКА(100))
		|									КОНЕЦ
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СправочникГрафикиРаботы.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|								ТОГДА ВЫРАЗИТЬ(&ГрафикНеЗаполнен КАК СТРОКА(100))
		|							ИНАЧЕ ВЫБОР
		|									КОГДА СправочникГрафикиРаботы.ДатаОкончания < ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, СправочникГрафикиРаботы.ГоризонтПланирования)
		|										ТОГДА ВЫРАЗИТЬ(&ПериодГрафикаОграничен КАК СТРОКА(100))
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ВозможнаяПричина
		|ИЗ
		|	Справочник.Календари КАК СправочникГрафикиРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыЗаполненностиГрафиков КАК ДанныеГрафиков
		|		ПО СправочникГрафикиРаботы.Ссылка = ДанныеГрафиков.ГрафикРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыЗаполненностиКалендарей КАК ДанныеПроизводственныхКалендарей
		|		ПО СправочникГрафикиРаботы.ПроизводственныйКалендарь = ДанныеПроизводственныхКалендарей.ПроизводственныйКалендарь
		|ГДЕ
		|	СправочникГрафикиРаботы.Ссылка В(&Календари)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСписка = Строки[Выборка.Ссылка];
		СтрокаСписка.Данные["ДатаНеобходимойЗаполненности"] = Выборка.ДатаНеобходимойЗаполненности;
		СтрокаСписка.Данные["ДатаЗаполненности"] = Выборка.ДатаЗаполненности;
		СтрокаСписка.Данные["ДатаЗаполненностиПроизводственногоКалендаря"] = Выборка.ДатаЗаполненностиПроизводственногоКалендаря;
		СтрокаСписка.Данные["ТребуетЗаполнения"] = Выборка.ТребуетЗаполнения;
		Если Выборка.ТребуетЗаполнения Тогда
			Для Каждого КлючИЗначение Из СтрокаСписка.Оформление Цикл
				КлючИЗначение.Значение.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);
			КонецЦикла;
		КонецЕсли;
		СтрокаСписка.Оформление["ВозможнаяПричина"].УстановитьЗначениеПараметра("Текст", Выборка.ВозможнаяПричина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыСписка()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ВладелецГрафика", , ВидСравненияКомпоновкиДанных.НеЗаполнено, , ,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
	
КонецПроцедуры

#КонецОбласти
