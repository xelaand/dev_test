
&НаКлиенте
Функция ПроверитьЗаполнениеТекШага()
	
	Если ЗначениеЗаполнено(Объект.Шаги[ТекНомерШага-1].Шаг) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура СледующийШаг(Команда)
	Если  ТекНомерШага = Объект.Шаги.Количество() Тогда
		Если  ТекНомерШага = 0 ИЛИ ПроверитьЗаполнениеТекШага() Тогда
			ТекНомерШага = ТекНомерШага +1;
			НоваяСтрока = Объект.Шаги.Добавить();
			ОбновитьШагПоНомеру();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено описание текущего шага");
		КонецЕСли;
	Иначе
		ТекНомерШага = ТекНомерШага +1;
		ОбновитьШагПоНомеру();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийШаг(Команда)
	Если ТекНомерШага <> 0 Тогда
		ТекНомерШага = ПроверитьСкорректироватьНомерШага(ТекНомерШага-1);
		ОбновитьШагПоНомеру();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТекНомерШагаПриИзменении(Элемент)
	ТекНомерШага = ПроверитьСкорректироватьНомерШага(ТекНомерШага);
	ОбновитьШагПоНомеру();
КонецПроцедуры

&НаКлиенте
Функция ПроверитьСкорректироватьНомерШага(НомерШага)
	
	Если НомерШага < 1 Тогда
		НомерШага = 1;
	ИначеЕсли 	НомерШага > Объект.Шаги.Количество() Тогда
		НомерШага = Объект.Шаги.Количество();
	КонецЕсли;
	
	Возврат НомерШага;
	
КонецФункции	

&НаКлиенте
Процедура ОбновитьШагПоНомеру()
	Если ТекНомерШага > 0 Тогда
		ТекСтрока = Объект.Шаги[ТекНомерШага-1];
		ОписаниеШага = ТекСтрока.Шаг;
		ОписаниеРезультата = ТекСтрока.Результат;
		ТекРоль = ТекСтрока.Роль;
	Иначе
		ОписаниеШага = "";
		ОписаниеРезультата = "";
		ТекРоль = ПредопределенноеЗначение("Справочник.РолиИсполнителей.ПустаяСсылка");
	КонецЕсли;
Конецпроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Шаги.Количество() > 0 Тогда
		ТекНомерШага = 1;
	КонецЕсли;
	ЗаполнитьПуть();
	Если Объект.Ссылка.Пустая() Тогда
		Режим = Истина;
	Иначе
		УстановитьПредставление();	
	КонецЕсли;	
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры


&НаСервере
Процедура УстановитьПредставление()
	
	ПредставлениеТеста = Справочники.СценарииТестирования.ПредставлениеСценария(Объект.Ссылка);
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ГруппаПредставление.Видимость = НЕ Режим;
	Элементы.ГруппаУсловия.Видимость = Режим;
	
	Элементы.ФормаПереключитьРежим.Пометка = Режим;
	
КонецПроцедуры	


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьШагПоНомеру();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаКолвоШаговСоздатьПервый()
	Если ТекНомерШага = 0 Тогда
		НоваяСтрока = Объект.Шаги.Добавить();
		ТекНомерШага=1;
	КонецЕсли;
КонецПроцедуры	


&НаКлиенте
Процедура ОписаниеШагаПриИзменении(Элемент)
	ПроверитьНаКолвоШаговСоздатьПервый();
	Объект.Шаги[ТекНомерШага-1].Шаг = ОписаниеШага;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРезультатаПриИзменении(Элемент)
	ПроверитьНаКолвоШаговСоздатьПервый();
	Объект.Шаги[ТекНомерШага-1].Результат = ОписаниеРезультата;
КонецПроцедуры

&НаКлиенте
Процедура ТекРольПриИзменении(Элемент)
	ПроверитьНаКолвоШаговСоздатьПервый();
	Объект.Шаги[ТекНомерШага-1].Роль = ТекРоль;
КонецПроцедуры


&НаКлиенте
Процедура УдалитьШаг(Команда)

	Если ТекНомерШага = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикЗавершенияВопроса = Новый ОписаниеОповещения("УдалитьШагПриЗавершении",ЭтотОбъект);
	ПоказатьВопрос(ОбработчикЗавершенияВопроса,"Строка с номером "+ТекНомерШага+" будет удалена. Продолжить?",РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Нет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьШагПриЗавершении(Парам1,Парам2) экспорт
	
	Если Парам1 = КодВозвратаДиалога.Да Тогда
		Объект.Шаги.Удалить(ТекНомерШага-1);
		ТекНомерШага = Мин(Объект.Шаги.Количество(),ТекНомерШага);
		ОбновитьШагПоНомеру();
	КонецЕсли;	
	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПуть()
	Если ЗначениеЗаполнено(Объект.Владелец.Родитель) Тогда
		ПолныйПуть = Объект.Владелец.Родитель.ПолноеНаименование();
	КонецЕсли;
КонецФункции	

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	ЗаполнитьПуть();
КонецПроцедуры

&НаСервере
Процедура ПереключитьРежимНаСервере()
	Режим = НЕ Режим;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРежим(Команда)
	ПереключитьРежимНаСервере();
	УстановитьПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеТестаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ДанныеСобытия.Href = Неопределено Тогда
		Возврат;
	КонецЕСли;	
	
			
	Если Найти(ДанныеСобытия.Href,"ПрисоединенныеФайлы") <> 0 Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			
			Оп = Новый ОписаниеОповещения("ПослеВопросаОЗаписиДокумента", ЭтотОбъект);
			
			Текст = "Данные еще не записаны.
					|Переход к ""Присоединенные файлы"" возможен только после записи.
					|Данные будут записаны.";
			
			ПоказатьВопрос(Оп, Текст, РежимДиалогаВопрос.ОКОтмена);
			
			Возврат;
			
		КонецЕсли;
		
		ОткрытьПрисоединенныеФайлы();
							 
	ИначеЕсли Найти(ДанныеСобытия.Href,"ПрисоединенныйФайл") Тогда
				 
		ИД = Прав(ДанныеСобытия.Href,36);
		Ссылка = НайтиПрисоединенныйФайлНаСервере(ИД);
		ДанныеФайла = ПолучитьДанныеФайла(Ссылка, Новый УникальныйИдентификатор);
		ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);

	Иначе
		Если Лев(ДанныеСобытия.Href,6)="e1c://" Тогда
			url = СтрЗаменить(ДанныеСобытия.Href,"/e1cib/","#e1cib/");
			ПерейтиПоНавигационнойСсылке(url);
		ИначеЕсли Лев(ДанныеСобытия.Href,12)="about:e1cib/" Тогда
			url = СтрЗаменить(ДанныеСобытия.Href,"about:e1cib/","e1cib/");
			ПерейтиПоНавигационнойСсылке(url);
		ИначеЕсли Лев(ДанныеСобытия.Href,7)="http://" И Найти(ДанныеСобытия.Href,"e1cib/") Тогда
			url = Сред(ДанныеСобытия.Href,Найти(ДанныеСобытия.Href,"e1cib/"));
			ПерейтиПоНавигационнойСсылке(url);
		Иначе
			ПерейтиПоНавигационнойСсылке(ДанныеСобытия.Href);
		КонецЕсли;	

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрисоединенныеФайлы()
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
	Заголовок = НСтр("ru = 'Присоединенные файлы'");
	ПараметрыФормы.Вставить("ЗаголовокФормы", Заголовок);

	ОткрытьФорму("ОбщаяФорма.ПрисоединенныеФайлы",
             ПараметрыФормы,
             ЭтаФорма,
             Истина,
             ЭтаФорма.Окно);

КонецПроцедуры


&НаСервере
Функция НайтиПрисоединенныйФайлНаСервере(ИД)
	
	Возврат Справочники.СценарииТестированияПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(Знач ПрисоединенныйФайл,
                            Знач ИдентификаторФормы = Неопределено,
                            Знач ПолучатьСсылкуНаДвоичныеДанные = Истина)
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(
		ПрисоединенныйФайл, ИдентификаторФормы, ПолучатьСсылкуНаДвоичныеДанные);
	
КонецФункции



